[{"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Address.ts":"1","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Country.ts":"2","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Currency.ts":"3","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Product.ts":"4","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Review.ts":"5","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\User.ts":"6","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\baseEntity\\index.ts":"7","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\db\\db.js":"8","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\enums\\Country\\index.ts":"9","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\enums\\Title\\index.ts":"10","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\index.ts":"11","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\customerTable.ts":"12","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\productTable.ts":"13","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\sellerTable.ts":"14","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\types\\createTableQueryType.ts":"15","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\userTable.ts":"16","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\types\\userType.ts":"17","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\basket.tsx":"18","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\index.tsx":"19","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\_app.tsx":"20","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\themes\\defaultTheme.ts":"21","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Address\\index.ts":"22","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Auth\\index.ts":"23","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Currency\\index.ts":"24","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Filter\\index.ts":"25","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\index.ts":"26","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Review\\index.ts":"27","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\UserInfo\\index.ts":"28","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\BasketCard\\index.tsx":"29","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\BasketCardWrapper\\index.tsx":"30","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\BasketPage\\index.tsx":"31","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\footer\\index.tsx":"32","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\AccountButton\\index.tsx":"33","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\BasketButton\\index.tsx":"34","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\index.tsx":"35","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\SelectAddressModal\\index.tsx":"36","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\SetAddressModal\\index.tsx":"37","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\types\\SelectAddressModalType\\index.ts":"38","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\types\\SetAddressModal\\index.ts":"39","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\index.tsx":"40","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LocationButton\\index.tsx":"41","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LogoWrapper\\index.tsx":"42","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\SearchBar\\index.tsx":"43","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\types\\LogoWrapperType\\index.ts":"44","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\enums\\CardType\\index.ts":"45","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\components\\ReviewStars\\index.tsx":"46","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\index.tsx":"47","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\ProductCardCompact\\index.tsx":"48","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\ProductCardWide\\index.tsx":"49","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCardFull\\index.tsx":"50","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCardWrapper\\index.tsx":"51","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductPage\\index.tsx":"52","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\review\\RatingsOverview\\index.tsx":"53","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\review\\ReviewCard\\index.tsx":"54","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\review\\ReviewListWrapper\\index.tsx":"55","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\CheckboxFilter\\index.tsx":"56","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\RangeFilter\\index.tsx":"57","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\index.tsx":"58","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\types\\CheckboxFilterType\\index.ts":"59","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\types\\RangeFilterType\\index.ts":"60","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\AuthContext\\index.tsx":"61","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\FilterContext\\index.tsx":"62","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\index.ts":"63","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ModalContext\\index.tsx":"64","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ProductContext\\index.tsx":"65","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ProductListContext\\index.tsx":"66","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\SettingsContext\\index.tsx":"67","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ThemeContext\\index.tsx":"68","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\UserContext\\index.tsx":"69","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ImageInputBox\\index.tsx":"70","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\InputBox\\index.tsx":"71","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\data-source.ts":"72","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\review\\add\\index.tsx":"73","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ProductForm\\index.tsx":"74","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ProductForm\\Validation\\index.ts":"75","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\RatingInputBox\\index.tsx":"76","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ReviewForm\\index.tsx":"77","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ReviewForm\\Validation\\index.tsx":"78","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\product\\[id].tsx":"79","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\ProductInfo\\index.ts":"80","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Order.ts":"81","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\OrderItem.ts":"82","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\index.ts":"83","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\index.ts":"84","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\sanitation\\id\\index.ts":"85","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\queryTransformer.ts":"86","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\enums\\StatusCode\\index.ts":"87","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Modal\\index.ts":"88","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Order\\index.ts":"89","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Service\\index.ts":"90","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\OrdersButton\\index.tsx":"91","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Basket.ts":"92","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\BasketItem.ts":"93","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\routes\\index.ts":"94","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\BaseService.ts":"95","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\BasketService.ts":"96","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CurrencyService.ts":"97","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\OrderService.ts":"98","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\RepositoryService.ts":"99","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\UserService.ts":"100","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\OrderRequest.ts":"101","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\ProductRequest.ts":"102","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\UserRequest.ts":"103","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\CurrencyRequest.ts":"104","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\idFromUrl.ts":"105","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\products.ts":"106","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\ReviewRequest.ts":"107","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\ReviewService.ts":"108","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\Router.ts":"109","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\api\\[...route].ts":"110","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\formatting.ts":"111","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\CurrencyInputBox\\index.tsx":"112","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\index.ts":"113","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\currency.ts":"114","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\product.ts":"115","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\review.ts":"116","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\user.ts":"117","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\product\\add.tsx":"118","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\AddressService.ts":"119","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\CategoryInputBox\\index.tsx":"120","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\page-components\\UserPage.tsx":"121","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Category.ts":"122","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\ProductCategory.ts":"123","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\ProductType.ts":"124","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\init\\setCategories.ts":"125","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\categories.ts":"126","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\countries.ts":"127","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\order.ts":"128","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\CategoryRequest.ts":"129","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\CountryRequest.ts":"130","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CountryService.ts":"131","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\OrderItemService.ts":"132","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\basket\\index.tsx":"133","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\index.tsx":"134","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\BasketView.ts":"135","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\OrderView.ts":"136","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\basket.ts":"137","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\BasketItemService.ts":"138","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\basket\\checkout\\index.tsx":"139","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\CheckoutPage\\index.tsx":"140","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\orders\\index.tsx":"141","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\orders\\OrdersPage\\index.tsx":"142","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\AddProductButton\\index.tsx":"143","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LocationButton\\modals\\ChangeCountryModal.tsx":"144","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LocationButton\\modals\\ChangeCurrencyModal.tsx":"145","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\actions\\productActions.tsx":"146","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\actions\\settingsAction.tsx":"147","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\actions\\userActions.tsx":"148","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\index.tsx":"149","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\product.tsx":"150","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\settings.tsx":"151","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\user.tsx":"152","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\store\\store.tsx":"153","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\NavigationButton\\index.tsx":"154","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\Checkbox\\index.tsx":"155","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\Price\\index.tsx":"156","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\ReviewFilter\\index.tsx":"157","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\types\\CheckBoxType\\index.ts":"158","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\utils\\loading\\index.tsx":"159","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\PageContext\\index.tsx":"160","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\ProductService\\index.ts":"161","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\ProductService\\test.ts":"162","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CategoryService\\index.ts":"163","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CategoryService\\test.ts":"164","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\test\\testDataset.seed.ts":"165"},{"size":553,"mtime":1664563201963,"results":"166","hashOfConfig":"167"},{"size":264,"mtime":1715021089913,"results":"168","hashOfConfig":"167"},{"size":309,"mtime":1711547890626,"results":"169","hashOfConfig":"167"},{"size":1230,"mtime":1716558514655,"results":"170","hashOfConfig":"167"},{"size":558,"mtime":1664306273586,"results":"171","hashOfConfig":"167"},{"size":583,"mtime":1716558503620,"results":"172","hashOfConfig":"167"},{"size":565,"mtime":1663341983876,"results":"173","hashOfConfig":"167"},{"size":325,"mtime":1661781110319,"results":"174","hashOfConfig":"167"},{"size":71,"mtime":1663341985318,"results":"175","hashOfConfig":"167"},{"size":80,"mtime":1663341985343,"results":"176","hashOfConfig":"167"},{"size":186,"mtime":1663341985366,"results":"177","hashOfConfig":"167"},{"size":467,"mtime":1663341985383,"results":"178","hashOfConfig":"167"},{"size":625,"mtime":1663341985403,"results":"179","hashOfConfig":"167"},{"size":465,"mtime":1663341985427,"results":"180","hashOfConfig":"167"},{"size":84,"mtime":1663341985446,"results":"181","hashOfConfig":"167"},{"size":289,"mtime":1663341985463,"results":"182","hashOfConfig":"167"},{"size":96,"mtime":1663341985484,"results":"183","hashOfConfig":"167"},{"size":404,"mtime":1663341997003,"results":"184","hashOfConfig":"167"},{"size":2137,"mtime":1715374263146,"results":"185","hashOfConfig":"167"},{"size":1482,"mtime":1714753369655,"results":"186","hashOfConfig":"167"},{"size":122,"mtime":1663341985593,"results":"187","hashOfConfig":"167"},{"size":103,"mtime":1663341985606,"results":"188","hashOfConfig":"167"},{"size":90,"mtime":1663341985650,"results":"189","hashOfConfig":"167"},{"size":59,"mtime":1663341985663,"results":"190","hashOfConfig":"167"},{"size":513,"mtime":1663341985689,"results":"191","hashOfConfig":"167"},{"size":593,"mtime":1663341985707,"results":"192","hashOfConfig":"167"},{"size":180,"mtime":1663341985765,"results":"193","hashOfConfig":"167"},{"size":294,"mtime":1663341985787,"results":"194","hashOfConfig":"167"},{"size":2684,"mtime":1710244458426,"results":"195","hashOfConfig":"167"},{"size":3709,"mtime":1714753369940,"results":"196","hashOfConfig":"167"},{"size":278,"mtime":1714599971673,"results":"197","hashOfConfig":"167"},{"size":1528,"mtime":1663341997354,"results":"198","hashOfConfig":"167"},{"size":1207,"mtime":1715375369039,"results":"199","hashOfConfig":"167"},{"size":754,"mtime":1715374263613,"results":"200","hashOfConfig":"167"},{"size":2483,"mtime":1715374263635,"results":"201","hashOfConfig":"167"},{"size":2432,"mtime":1664997226582,"results":"202","hashOfConfig":"167"},{"size":2359,"mtime":1664997241547,"results":"203","hashOfConfig":"167"},{"size":179,"mtime":1663341985839,"results":"204","hashOfConfig":"167"},{"size":11,"mtime":1663341985851,"results":"205","hashOfConfig":"167"},{"size":2961,"mtime":1715874533444,"results":"206","hashOfConfig":"167"},{"size":2393,"mtime":1715374263702,"results":"207","hashOfConfig":"167"},{"size":469,"mtime":1715027864419,"results":"208","hashOfConfig":"167"},{"size":4120,"mtime":1715631165089,"results":"209","hashOfConfig":"167"},{"size":76,"mtime":1664451923156,"results":"210","hashOfConfig":"167"},{"size":65,"mtime":1663341986061,"results":"211","hashOfConfig":"167"},{"size":616,"mtime":1664553398933,"results":"212","hashOfConfig":"167"},{"size":11,"mtime":1663341998241,"results":"213","hashOfConfig":"167"},{"size":2246,"mtime":1714753370420,"results":"214","hashOfConfig":"167"},{"size":3006,"mtime":1715374263853,"results":"215","hashOfConfig":"167"},{"size":2982,"mtime":1715374263870,"results":"216","hashOfConfig":"167"},{"size":9178,"mtime":1716470041865,"results":"217","hashOfConfig":"167"},{"size":1580,"mtime":1711632977551,"results":"218","hashOfConfig":"167"},{"size":3202,"mtime":1711632977577,"results":"219","hashOfConfig":"167"},{"size":3060,"mtime":1711632977601,"results":"220","hashOfConfig":"167"},{"size":1586,"mtime":1711632977621,"results":"221","hashOfConfig":"167"},{"size":5369,"mtime":1711632977737,"results":"222","hashOfConfig":"167"},{"size":1304,"mtime":1711632977781,"results":"223","hashOfConfig":"167"},{"size":1921,"mtime":1716470041868,"results":"224","hashOfConfig":"167"},{"size":167,"mtime":1663341986109,"results":"225","hashOfConfig":"167"},{"size":162,"mtime":1663341986121,"results":"226","hashOfConfig":"167"},{"size":1284,"mtime":1664803014537,"results":"227","hashOfConfig":"167"},{"size":763,"mtime":1663341998709,"results":"228","hashOfConfig":"167"},{"size":541,"mtime":1663361344589,"results":"229","hashOfConfig":"167"},{"size":726,"mtime":1663341998729,"results":"230","hashOfConfig":"167"},{"size":2803,"mtime":1711632978032,"results":"231","hashOfConfig":"167"},{"size":1572,"mtime":1711632978049,"results":"232","hashOfConfig":"167"},{"size":3438,"mtime":1715196400931,"results":"233","hashOfConfig":"167"},{"size":1413,"mtime":1711632978100,"results":"234","hashOfConfig":"167"},{"size":3585,"mtime":1711632978135,"results":"235","hashOfConfig":"167"},{"size":772,"mtime":1663341997471,"results":"236","hashOfConfig":"167"},{"size":763,"mtime":1663354671270,"results":"237","hashOfConfig":"167"},{"size":1612,"mtime":1716547428095,"results":"238","hashOfConfig":"167"},{"size":342,"mtime":1663341997136,"results":"239","hashOfConfig":"167"},{"size":3600,"mtime":1711632976825,"results":"240","hashOfConfig":"167"},{"size":1146,"mtime":1664563205626,"results":"241","hashOfConfig":"167"},{"size":953,"mtime":1663354706329,"results":"242","hashOfConfig":"167"},{"size":4663,"mtime":1714753370140,"results":"243","hashOfConfig":"167"},{"size":499,"mtime":1663341997795,"results":"244","hashOfConfig":"167"},{"size":784,"mtime":1711632976236,"results":"245","hashOfConfig":"167"},{"size":303,"mtime":1663341985750,"results":"246","hashOfConfig":"167"},{"size":563,"mtime":1664306237495,"results":"247","hashOfConfig":"167"},{"size":497,"mtime":1664563166585,"results":"248","hashOfConfig":"167"},{"size":11,"mtime":1664643861351,"results":"249","hashOfConfig":"167"},{"size":2787,"mtime":1663706782712,"results":"250","hashOfConfig":"167"},{"size":350,"mtime":1663341984798,"results":"251","hashOfConfig":"167"},{"size":468,"mtime":1663341985263,"results":"252","hashOfConfig":"167"},{"size":192,"mtime":1663341985329,"results":"253","hashOfConfig":"167"},{"size":70,"mtime":1663769882190,"results":"254","hashOfConfig":"167"},{"size":241,"mtime":1663341985739,"results":"255","hashOfConfig":"167"},{"size":263,"mtime":1716470041857,"results":"256","hashOfConfig":"167"},{"size":688,"mtime":1715374263758,"results":"257","hashOfConfig":"167"},{"size":297,"mtime":1686168657391,"results":"258","hashOfConfig":"167"},{"size":482,"mtime":1664364369319,"results":"259","hashOfConfig":"167"},{"size":1627,"mtime":1715374262773,"results":"260","hashOfConfig":"167"},{"size":2305,"mtime":1664996938160,"results":"261","hashOfConfig":"167"},{"size":1271,"mtime":1664716240573,"results":"262","hashOfConfig":"167"},{"size":1622,"mtime":1711547891035,"results":"263","hashOfConfig":"167"},{"size":1462,"mtime":1714742735587,"results":"264","hashOfConfig":"167"},{"size":695,"mtime":1711632975925,"results":"265","hashOfConfig":"167"},{"size":1057,"mtime":1663348686120,"results":"266","hashOfConfig":"167"},{"size":2986,"mtime":1716470041865,"results":"267","hashOfConfig":"167"},{"size":3396,"mtime":1716470041865,"results":"268","hashOfConfig":"167"},{"size":8198,"mtime":1716470041865,"results":"269","hashOfConfig":"167"},{"size":1352,"mtime":1709489781116,"results":"270","hashOfConfig":"167"},{"size":128,"mtime":1663341985195,"results":"271","hashOfConfig":"167"},{"size":293,"mtime":1663341985248,"results":"272","hashOfConfig":"167"},{"size":1318,"mtime":1716470041865,"results":"273","hashOfConfig":"167"},{"size":1225,"mtime":1664997005325,"results":"274","hashOfConfig":"167"},{"size":892,"mtime":1664997011944,"results":"275","hashOfConfig":"167"},{"size":1832,"mtime":1715375347547,"results":"276","hashOfConfig":"167"},{"size":675,"mtime":1664457371085,"results":"277","hashOfConfig":"167"},{"size":1647,"mtime":1711632976759,"results":"278","hashOfConfig":"167"},{"size":622,"mtime":1715198175786,"results":"279","hashOfConfig":"167"},{"size":961,"mtime":1710192933770,"results":"280","hashOfConfig":"167"},{"size":2014,"mtime":1716470041857,"results":"281","hashOfConfig":"167"},{"size":1188,"mtime":1715210155013,"results":"282","hashOfConfig":"167"},{"size":2448,"mtime":1711632975315,"results":"283","hashOfConfig":"167"},{"size":542,"mtime":1711632976248,"results":"284","hashOfConfig":"167"},{"size":504,"mtime":1663769880680,"results":"285","hashOfConfig":"167"},{"size":1874,"mtime":1664563205442,"results":"286","hashOfConfig":"167"},{"size":147,"mtime":1664997425245,"results":"287","hashOfConfig":"167"},{"size":183,"mtime":1716549467462,"results":"288","hashOfConfig":"167"},{"size":382,"mtime":1715374262371,"results":"289","hashOfConfig":"167"},{"size":219,"mtime":1663769879304,"results":"290","hashOfConfig":"167"},{"size":2397,"mtime":1664996764045,"results":"291","hashOfConfig":"167"},{"size":947,"mtime":1716470041849,"results":"292","hashOfConfig":"167"},{"size":535,"mtime":1711632975171,"results":"293","hashOfConfig":"167"},{"size":858,"mtime":1715374262530,"results":"294","hashOfConfig":"167"},{"size":1445,"mtime":1716549652365,"results":"295","hashOfConfig":"167"},{"size":1019,"mtime":1711632975352,"results":"296","hashOfConfig":"167"},{"size":632,"mtime":1711632975784,"results":"297","hashOfConfig":"167"},{"size":1426,"mtime":1716470041865,"results":"298","hashOfConfig":"167"},{"size":149,"mtime":1664997077037,"results":"299","hashOfConfig":"167"},{"size":51,"mtime":1663769882065,"results":"300","hashOfConfig":"167"},{"size":2441,"mtime":1664563202084,"results":"301","hashOfConfig":"167"},{"size":470,"mtime":1715210203836,"results":"302","hashOfConfig":"167"},{"size":1039,"mtime":1711632975124,"results":"303","hashOfConfig":"167"},{"size":2774,"mtime":1711632975727,"results":"304","hashOfConfig":"167"},{"size":264,"mtime":1664563204710,"results":"305","hashOfConfig":"167"},{"size":5625,"mtime":1711632976669,"results":"306","hashOfConfig":"167"},{"size":253,"mtime":1664643631901,"results":"307","hashOfConfig":"167"},{"size":2984,"mtime":1715027216967,"results":"308","hashOfConfig":"167"},{"size":553,"mtime":1715869718286,"results":"309","hashOfConfig":"167"},{"size":2140,"mtime":1711632977187,"results":"310","hashOfConfig":"167"},{"size":2138,"mtime":1711632977254,"results":"311","hashOfConfig":"167"},{"size":1303,"mtime":1714753369760,"results":"312","hashOfConfig":"167"},{"size":239,"mtime":1715374263214,"results":"313","hashOfConfig":"167"},{"size":224,"mtime":1714753369770,"results":"314","hashOfConfig":"167"},{"size":529,"mtime":1715190143553,"results":"315","hashOfConfig":"167"},{"size":2002,"mtime":1715374263248,"results":"316","hashOfConfig":"167"},{"size":467,"mtime":1715374263255,"results":"317","hashOfConfig":"167"},{"size":596,"mtime":1714753369800,"results":"318","hashOfConfig":"167"},{"size":425,"mtime":1715190185934,"results":"319","hashOfConfig":"167"},{"size":172,"mtime":1715374263748,"results":"320","hashOfConfig":"167"},{"size":3208,"mtime":1715374263993,"results":"321","hashOfConfig":"167"},{"size":2820,"mtime":1715374264066,"results":"322","hashOfConfig":"167"},{"size":2060,"mtime":1715374264094,"results":"323","hashOfConfig":"167"},{"size":119,"mtime":1715189165809,"results":"324","hashOfConfig":"167"},{"size":265,"mtime":1711632977901,"results":"325","hashOfConfig":"167"},{"size":12623,"mtime":1715374264220,"results":"326","hashOfConfig":"167"},{"size":6211,"mtime":1716560954767,"results":"327","hashOfConfig":"167"},{"size":2591,"mtime":1716560379891,"results":"328","hashOfConfig":"167"},{"size":1335,"mtime":1716554984572,"results":"329","hashOfConfig":"167"},{"size":1873,"mtime":1716561012316,"results":"330","hashOfConfig":"167"},{"size":78,"mtime":1716544008530,"results":"331","hashOfConfig":"167"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jd36tp",{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488"},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","suppressedMessages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505"},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534"},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","suppressedMessages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","suppressedMessages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","suppressedMessages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","suppressedMessages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","suppressedMessages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","suppressedMessages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","suppressedMessages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","suppressedMessages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","suppressedMessages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","suppressedMessages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","suppressedMessages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","suppressedMessages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","suppressedMessages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701"},{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711"},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"718","messages":"719","suppressedMessages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","suppressedMessages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","suppressedMessages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"730","messages":"731","suppressedMessages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","suppressedMessages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"736","messages":"737","suppressedMessages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","suppressedMessages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","suppressedMessages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","suppressedMessages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","suppressedMessages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","suppressedMessages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","suppressedMessages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","suppressedMessages":"762","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763"},{"filePath":"764","messages":"765","suppressedMessages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","suppressedMessages":"769","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770"},{"filePath":"771","messages":"772","suppressedMessages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","suppressedMessages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","suppressedMessages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","suppressedMessages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","suppressedMessages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","suppressedMessages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","suppressedMessages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"792","messages":"793","suppressedMessages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","suppressedMessages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"798","messages":"799","suppressedMessages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"801","messages":"802","suppressedMessages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","suppressedMessages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","suppressedMessages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810"},{"filePath":"811","messages":"812","suppressedMessages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","suppressedMessages":"816","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"817"},{"filePath":"818","messages":"819","suppressedMessages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","suppressedMessages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","suppressedMessages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","suppressedMessages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","suppressedMessages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","suppressedMessages":"841","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Address.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Country.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Currency.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Product.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Review.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\User.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\baseEntity\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\db\\db.js",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\enums\\Country\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\enums\\Title\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\customerTable.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\productTable.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\sellerTable.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\types\\createTableQueryType.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\modelCreation\\userTable.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\models\\types\\userType.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\basket.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\_app.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\themes\\defaultTheme.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Address\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Auth\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Currency\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Filter\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Review\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\UserInfo\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\BasketCard\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\BasketCardWrapper\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\BasketPage\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\footer\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\AccountButton\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\BasketButton\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\SelectAddressModal\\index.tsx",["842"],[],"import { Address } from \"../../../../../../api/entities\";\nimport {\n  Radio,\n  ModalFooter,\n  Button,\n  Box,\n  RadioGroup,\n  Modal,\n  ModalContent,\n  ModalCloseButton,\n  ModalOverlay,\n  ModalHeader,\n} from \"@chakra-ui/react\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../../../../contexts\";\n\ntype SelectAddressModalType = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nexport default function SelectAddressModal(\n  props: SelectAddressModalType\n): JSX.Element {\n  const { addresses, currentAddressIndex, setCurrentAddressIndex, loading } =\n    useContext(UserContext);\n\n  const handleClick = (nextVal: string) => {\n    // Convert next val to number as the\n    // radio group onChange function argument\n    // is of type string\n    if (isNaN(nextVal as any)) {\n      return;\n    }\n\n    const key: number = parseInt(nextVal);\n\n    if (!addresses || !setCurrentAddressIndex) {\n      return;\n    }\n    if (key < 0 || key > addresses.length) {\n      return;\n    }\n\n    setCurrentAddressIndex(key);\n  };\n\n  useEffect(() => {\n    console.log(addresses);\n  }, []);\n\n  const renderCheckBox = (address: Address, key: number): JSX.Element => {\n    return (\n      <Radio value={key} key={key}>\n        <Box display=\"flex\" flexDirection=\"row\">\n          <Box>\n            <b>{address.name}: </b>\n            {address.county}, {address.postcode}\n          </Box>\n        </Box>\n      </Radio>\n    );\n  };\n\n  const renderAddresses = (): JSX.Element => {\n    if (!addresses) {\n      return <></>;\n    }\n\n    return (\n      <RadioGroup\n        value={currentAddressIndex}\n        onChange={handleClick}\n        display=\"flex\"\n        flexDirection=\"column\"\n      >\n        {addresses.map((v: Address, i) => {\n          return renderCheckBox(v, i);\n        })}\n      </RadioGroup>\n    );\n  };\n\n  return (\n    <Modal onClose={props.onClose} isOpen={props.isOpen}>\n      <ModalOverlay />\n      <ModalCloseButton />\n      <ModalContent>\n        <ModalHeader>Select an Address</ModalHeader>\n        <Box paddingX=\"5%\">{renderAddresses()}</Box>\n        <ModalFooter>\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            w=\"100%\"\n          >\n            <Button onClick={props.onClose}>Close</Button>\n            <Button onClick={props.onClose}>Submit</Button>\n          </Box>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\SetAddressModal\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\types\\SelectAddressModalType\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\DeliveryButton\\modals\\types\\SetAddressModal\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LocationButton\\index.tsx",["843"],[],"import { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  Box,\n} from \"@chakra-ui/react\";\nimport { UserContext } from \"../../../contexts\";\nimport { useContext, useState } from \"react\";\nimport ChangeCurrencyModal from \"./modals/ChangeCurrencyModal\";\nimport ChangeCountryModal from \"./modals/ChangeCountryModal\";\nimport Image from \"next/image\";\nimport NavigationButton from \"../NavigationButton\";\n\nexport default function LocationButton(): JSX.Element {\n  const { user, loading } = useContext(UserContext);\n  const defaultCountry = \"US\";\n\n  const [showCurrencyModal, setShowCurrencyModal] = useState<boolean>(false);\n  const [showCountryModal, setShowCountryModal] = useState<boolean>(false);\n\n  const handleClick = () => {};\n\n  return (\n    <NavigationButton>\n      <Menu>\n        <MenuButton as={Button} maxW=\"12vh\" fontSize=\"xs\" p=\"0.3em\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            maxW=\"4em\"\n          >\n            <Box display=\"flex\">\n              <Image\n                width=\"100%\"\n                height=\"100%\"\n                objectFit=\"contain\"\n                src={`https://flagsapi.com/${user?.country?.code}/flat/64.png`}\n              />\n            </Box>\n            <Box w=\"fit-content\" minW=\"1em\">\n              <ChevronDownIcon />\n            </Box>\n          </Box>\n        </MenuButton>\n        <MenuList>\n          <MenuItem\n            h=\"50%\"\n            textDecoration=\"underline\"\n            _hover={{ textColor: \"blue\", bgColor: \"white\" }}\n            onClick={() => setShowCountryModal(!showCountryModal)}\n          >\n            Change Location ({user?.country?.code})\n          </MenuItem>\n          <ChangeCountryModal\n            isOpen={showCountryModal}\n            onClose={() => setShowCountryModal(false)}\n          />\n          <MenuItem\n            textDecoration=\"underline\"\n            _hover={{ textColor: \"blue\", bgColor: \"white\" }}\n            h=\"50%\"\n            onClick={() => setShowCurrencyModal(!showCurrencyModal)}\n          >\n            Change Currency ({user?.currency?.code})\n          </MenuItem>\n          <ChangeCurrencyModal\n            isOpen={showCurrencyModal}\n            onClose={() => setShowCurrencyModal(false)}\n          />\n        </MenuList>\n      </Menu>\n    </NavigationButton>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LogoWrapper\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\SearchBar\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\types\\LogoWrapperType\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\enums\\CardType\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\components\\ReviewStars\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\ProductCardCompact\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCard\\ProductCardWide\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCardFull\\index.tsx",["844","845","846","847"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { ProductContext, ThemeContext, UserContext } from \"../../../contexts\";\nimport { Box, Image, Text } from \"@chakra-ui/react\";\nimport ReviewStars from \"../ProductCard/components/ReviewStars\";\nimport { SettingsContext } from \"../../../contexts/SettingsContext\";\nimport RatingsOverview from \"../../review/RatingsOverview\";\n\nexport default function ProductCardFull(): JSX.Element {\n  const { product } = useContext(ProductContext);\n  const { getConvertedPrice, defaultImageURL } = useContext(SettingsContext);\n  const { user } = useContext(UserContext);\n  const { theme } = useContext(ThemeContext);\n\n  const [convertedPrice, setConvertedPrice] = useState<number>(0);\n\n  useEffect(() => {\n    if (product?.price && product?.currency && user?.currency) {\n      getConvertedPrice(product.currency, product.price, user.currency).then(\n        (res) => setConvertedPrice(res)\n      );\n    }\n  }, []);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"row\"\n      h=\"50vh\"\n      w=\"100%\"\n      alignItems=\"left\"\n      justifyItems=\"left\"\n      overflow=\"hidden\"\n    >\n      <Box w=\"70vh\" h=\"50vh\" display=\"flex\" flexDirection=\"row\" gap=\"10px\">\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap=\"10px\"\n          h=\"50vh\"\n          w=\"100px\"\n        >\n          {[1, 2, 3, 4, 5].map((key) => {\n            return (\n              <Image\n                key={key}\n                borderColor={theme.colors.secondaryBorder}\n                borderWidth={theme.sizes.borderWidth}\n                borderRadius={theme.sizes.borderRadius}\n                src={defaultImageURL ? defaultImageURL : \"\"}\n                h=\"fit-content\"\n                w=\"100%\"\n              />\n\n              //</Image>\n            );\n          })}\n        </Box>\n        <Image\n          src={product.image_url ? product.image_url : \"\"}\n          fallbackSrc={defaultImageURL ? defaultImageURL : \"\"}\n          //maxH=\"50vh\"\n          w=\"60%\"\n          h=\"fit-content\"\n          verticalAlign=\"middle\"\n          margin=\"auto\"\n        />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" w=\"50%\">\n        <Box>\n          <Text fontSize=\"2xl\" noOfLines={2}>\n            {product.title}\n          </Text>\n        </Box>\n        <Box display=\"flex\" flexDirection=\"row\">\n          <ReviewStars reviewScore={product.review_score} />\n          &bull;\n          <Box>{product.review_count} reviews</Box>\n        </Box>\n        <Box fontWeight=\"500\" color={theme.colors.product.border}>\n          {/* INCORRECT PRICE BUT JUST TO SEE FOR NOW*/}\n          {user ? user.currency.code : \"\"} {product.price}\n        </Box>\n        <Text fontWeight=\"550\" fontSize=\"lg\">\n          About this product\n        </Text>\n        <Box overflow=\"scroll\" overflowX=\"hidden\">\n          {product.description.split(\"|\").map((res) => (\n            <Text>{res}</Text>\n          ))}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductCardWrapper\\index.tsx",["848","849","850","851","852"],[],"import { GridItem, Box, Button, Grid, Select } from \"@chakra-ui/react\";\nimport ProductCardCompact from \"../ProductCard/ProductCardCompact\";\nimport ProductCardWide from \"../ProductCard/ProductCardWide\";\nimport { CardType } from \"../enums/CardType\";\nimport { useEffect, useState } from \"react\";\nimport { getProductBySearch } from \"../../../../api/helpers/requests/product\";\nimport {\n  setProductCount,\n  setProducts,\n  setIncrement,\n  setCardType,\n  setQueryParams,\n  setPageNumber,\n  setFilterType,\n} from \"../../../../redux/actions/productActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../redux/store/store\";\nimport { FilterType, QueryParams } from \"../../../../redux/reducers/product\";\nimport { ProductResponse } from \"../../../../api/services/ProductService\";\nimport { getMostPopularCategories } from \"../../../../api/helpers/requests/categories\";\n\nexport default function ProductCardWrapper(): JSX.Element {\n  // fetch redux data\n  const dispatch = useDispatch();\n  const products = useSelector(\n    (state: RootState) => state.productReducer.products\n  );\n  const queryParams = useSelector(\n    (state: RootState) => state.productReducer.queryParams\n  );\n  const productCount = useSelector(\n    (state: RootState) => state.productReducer.productCount\n  );\n  const increment = useSelector(\n    (state: RootState) => state.productReducer.increment\n  );\n  const cardType = useSelector(\n    (state: RootState) => state.productReducer.cardType\n  );\n  const pageNumber = useSelector(\n    (state: RootState) => state.productReducer.pageNumber\n  );\n\n  // set info for page toggling\n  const available_pages = 10;\n  const [lowerBound, setLowerBound] = useState<number>(1);\n  const totalPages: number = Math.ceil(productCount / increment);\n\n  // load products and product count\n  const fetchProducts = (params: QueryParams): void => {\n    if (!params) {\n      return;\n    }\n    getProductBySearch(params).then((product_response: ProductResponse) => {\n      dispatch(setProducts(product_response.products));\n      dispatch(setProductCount(product_response.product_count));\n    });\n  };\n\n  // initial load\n  useEffect(() => {\n    console.log(queryParams);\n    fetchProducts(queryParams);\n  }, []);\n\n  // on changing pagination parameters\n  useEffect(() => {\n    fetchProducts(queryParams);\n  }, [queryParams.start, queryParams.end]);\n\n  useEffect(() => {\n    dispatch(setQueryParams({ start: 0, end: increment }));\n    incrementPage(1 - pageNumber, false);\n  }, [increment]);\n\n  // on changing non=pagination parameters\n  useEffect(() => {\n    // set page number to 1\n    console.log(queryParams);\n    incrementPage(1 - pageNumber);\n    fetchProducts(queryParams);\n  }, [\n    queryParams.categories,\n    queryParams.query,\n    queryParams.priceMax,\n    queryParams.priceMax,\n    queryParams.priceMin,\n    queryParams.reviewMin,\n    queryParams.filterType,\n  ]);\n\n  const incrementPage = (\n    pageDifference: number,\n    changeQueryParams: boolean = true\n  ) => {\n    const newPageNumber = pageNumber + pageDifference;\n    const upperBound = lowerBound + available_pages - 1;\n    const centeringIncrement = Math.floor(available_pages / 2);\n\n    if (newPageNumber == 1) {\n      setLowerBound(1);\n    }\n\n    if (upperBound - newPageNumber == 0) {\n      setLowerBound(lowerBound + centeringIncrement);\n    }\n    if (upperBound - newPageNumber == 1) {\n      setLowerBound(lowerBound + 1);\n    }\n    if (newPageNumber - lowerBound == 1 && lowerBound > 2) {\n      setLowerBound(lowerBound - 2);\n    }\n    if (newPageNumber - lowerBound == 0) {\n      if (lowerBound > centeringIncrement) {\n        setLowerBound(lowerBound - centeringIncrement);\n      } else if (lowerBound > 1) {\n        setLowerBound(lowerBound - 1);\n      }\n    }\n\n    if (changeQueryParams) {\n      const difference = pageDifference * increment;\n      dispatch(\n        setQueryParams({\n          start: queryParams.start + difference,\n          end: queryParams.end + difference,\n        })\n      );\n    }\n\n    dispatch(setPageNumber(newPageNumber));\n  };\n\n  const getPageNumbers = (): number[] => {\n    return Array.from(\n      { length: available_pages },\n      (_, index) => lowerBound + index\n    );\n  };\n\n  const handleChangeFilter = (event) => {\n    var filterType = FilterType.NONE;\n\n    switch (event.target.value) {\n      case \"Price: Low - High\":\n        filterType = FilterType.PRICE_LOW_HIGH;\n        break;\n      case \"Price: High - Low\":\n        filterType = FilterType.PRICE_HIGH_LOW;\n        break;\n      case \"Relevance\":\n        filterType = FilterType.RELEVANCE;\n        break;\n      case \"Review Score\":\n        filterType = FilterType.REVIEW_SCORE;\n        break;\n      case \"Popularity\":\n        filterType = FilterType.POPULARITY;\n        break;\n    }\n\n    dispatch(setQueryParams({ filterType: filterType }));\n  };\n\n  const compactCardWrapper = (): JSX.Element => {\n    return (\n      <Grid\n        margin=\"0\"\n        padding=\"0\"\n        w=\"100%\"\n        templateColumns=\"repeat(5, 1fr)\"\n        gap=\"10px\"\n      >\n        {products.map((v, i) => {\n          return (\n            <GridItem>\n              <ProductCardCompact key={i} {...v} />\n            </GridItem>\n          );\n        })}\n      </Grid>\n    );\n  };\n\n  const wideCardWrapper = (): JSX.Element => {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" gap=\"5px\">\n        {products.map((v, i) => {\n          return <ProductCardWide key={i} {...v} />;\n        })}\n      </Box>\n    );\n  };\n\n  const noProductMessage = (): JSX.Element => {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        textAlign=\"center\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        border=\"2px solid black\"\n        borderRadius=\"3px\"\n        h=\"100px\"\n        w=\"100vh\"\n      >\n        {\" \"}\n        No products found{\" \"}\n      </Box>\n    );\n  };\n\n  const renderBody = (cardType: CardType): JSX.Element => {\n    if (cardType === CardType.compact) {\n      return compactCardWrapper();\n    }\n    if (cardType === CardType.wide) {\n      return wideCardWrapper();\n    }\n    return <></>;\n  };\n\n  const onClick = (number: number): void => {\n    const difference = number - pageNumber;\n    incrementPage(difference);\n    return;\n  };\n\n  const pageBox = (number: number): JSX.Element => {\n    return (\n      <Button\n        onClick={() => onClick(number)}\n        w=\"30px\"\n        padding=\"3px\"\n        border=\"1px solid black\"\n        borderRadius=\"3px\"\n        textAlign=\"center\"\n        bgColor={pageNumber == number ? \"yellow\" : \"white\"}\n        disabled={totalPages ? number > totalPages : false}\n      >\n        {number}\n      </Button>\n    );\n  };\n\n  const onClickCardType = (cardType: CardType, results: number): void => {\n    dispatch(setCardType(cardType));\n    dispatch(setIncrement(results));\n    dispatch(setQueryParams({ end: queryParams.start + results }));\n  };\n\n  const renderResultsMessage = (): JSX.Element => {\n    return (\n      <Box alignItems=\"center\" justifyContent=\"center\">\n        Showing of {increment * (pageNumber - 1) + 1} -{\" \"}\n        {Math.min(increment * pageNumber, productCount)} of {productCount}{\" \"}\n        results\n      </Box>\n    );\n  };\n\n  const pages = getPageNumbers();\n\n  const renderContent = (): JSX.Element => {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" marginY=\"10px\">\n        <Box\n          marginX=\"10px\"\n          h=\"30px\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          {products?.length > 0 ? renderResultsMessage() : <></>}\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            gap=\"10px\"\n          >\n            <Select\n              placeholder=\"Filter by\"\n              onClick={(event) => handleChangeFilter(event)}\n            >\n              <option>Price: Low - High</option>\n              <option>Price: High - Low</option>\n              <option>Relevance</option>\n              <option>Review Score</option>\n              <option>Popularity</option>\n            </Select>\n            <span>Results per page</span>\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              gap=\"10px\"\n              textDecoration=\"underline\"\n            >\n              <Box\n                as=\"button\"\n                onClick={() => onClickCardType(CardType.wide, 10)}\n              >\n                10\n              </Box>\n              <Box\n                as=\"button\"\n                onClick={() => onClickCardType(CardType.compact, 30)}\n              >\n                30\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Box w=\"60%\" margin=\"10px\">\n          {products?.length > 1 ? renderBody(cardType) : noProductMessage()}\n        </Box>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          w=\"100%\"\n          justifyContent=\"center\"\n          gap=\"10px\"\n        >\n          {pages.map((page) => pageBox(page))}\n        </Box>\n      </Box>\n    );\n  };\n\n  return renderContent();\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\product\\ProductPage\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\review\\RatingsOverview\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\review\\ReviewCard\\index.tsx",["853"],[],"import { VStack, Box, Image, Button, Text } from \"@chakra-ui/react\";\nimport { ReviewType } from \"../../../../types/Review\";\nimport { UserInfo } from \"../../../../types/UserInfo\";\nimport { Review } from \"../../../../api/entities\";\nimport ReviewStars from \"../../product/ProductCard/components/ReviewStars\";\nimport RatingsOverview from \"../RatingsOverview\";\nimport { AuthContext, ProductContext, ThemeContext } from \"../../../contexts\";\nimport { useContext } from \"react\";\nimport { deleteReview } from \"../../../../api/helpers/requests/review\";\nimport { SettingsContext } from \"../../../contexts/SettingsContext\";\n\nexport default function ReviewCard(review: Review): JSX.Element {\n  const { user } = useContext(AuthContext);\n  const { theme } = useContext(ThemeContext);\n  const { onUpdateReview } = useContext(ProductContext);\n  const { defaultProfileImageURL } = useContext(SettingsContext);\n\n  const reviewStarsProps = {\n    onColor: \"black\",\n    offColor: \"teal\",\n    reviewScore: review.score,\n  };\n\n  const renderImages = () => {\n    if (!review.image_urls || review.image_urls.length === 0) {\n      return;\n    }\n\n    // Render images here\n  };\n\n  const ratingOverviewProps = {\n    averageRating: 3.5,\n    totalReviews: 25,\n  };\n\n  const deleteHandler = () => {\n    deleteReview(review).then((res) => {\n      onUpdateReview();\n    });\n  };\n\n  const renderDeleteButton = () => {\n    const userHasPermission = user.user_id === review.user.user_id;\n    return (\n      userHasPermission && (\n        <Button onClick={deleteHandler} h=\"100%\">\n          Delete\n        </Button>\n      )\n    );\n  };\n\n  return (\n    <VStack\n      // borderRadius={theme.sizes.borderRadius}\n      // borderWidth={theme.sizes.borderWidth}\n      // borderColor={theme.colors.primaryBorder}\n      //borderRadius=\"10px\"\n      w=\"100%\"\n      maxH=\"25h\"\n      marginTop=\"5px\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        verticalAlign=\"middle\"\n        justifyContent=\"space-around\"\n        h=\"30%\"\n        maxH=\"10vh\"\n        w=\"100%\"\n        borderBottom=\"1px solid black\"\n        padding=\"3px\"\n      >\n        <Box\n          h=\"100%\"\n          w=\"100%\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          justifyItems=\"center\"\n        >\n          <Image\n            src={\n              review.user.image_url\n                ? review.user.image_url\n                : defaultProfileImageURL\n            }\n            borderRadius={theme.sizes.borderRadius}\n            marginRight=\"3px\"\n          />\n          <Text fontWeight=\"500\">{review.user.user_name}</Text>\n        </Box>\n        {renderDeleteButton()}\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\" w=\"100%\" paddingX=\"5px\">\n        <ReviewStars {...reviewStarsProps} />\n        <Text fontWeight=\"550\" fontSize=\"md\" marginLeft=\"3px\">\n          {review.title}\n        </Text>\n      </Box>\n      <Text fontWeight=\"350\" w=\"100%\" paddingX=\"5px\" fontSize=\"s\">\n        {review.content}\n      </Text>\n    </VStack>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\review\\ReviewListWrapper\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\CheckboxFilter\\index.tsx",["854"],[],"import { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Checkbox, CheckboxGroup, Box } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Category } from \"../../../../../api/entities\";\nimport { SettingsContext } from \"../../../../contexts/SettingsContext\";\nimport { CheckboxFilterType, OptionType } from \"../../types/CheckboxFilterType\";\n\nexport default function CheckboxFilter(props: CheckboxFilterType): JSX.Element {\n  const { parentCategories, loading } = useContext(SettingsContext);\n  const [selectedCategories, setSelectedCategories] = useState<number[]>([]);\n  const [categoriesTrees] = useContext(SettingsContext);\n  const [showChildren, setShowChildren] = useState<number[]>([]);\n\n  const getChildrenCategories = (category: Category): Category[] => {\n    let categoriesList: Category[] = [];\n    if (category?.children?.length) {\n      category.children.forEach((child: Category) => {\n        categoriesList.push(child);\n        categoriesList.push(...getChildrenCategories(child));\n      });\n    }\n    return categoriesList;\n  };\n\n  const getCategoriesFlat = (): Category[] => {\n    let categoriesList: Category[] = [];\n    for (const category of parentCategories) {\n      categoriesList.push(category);\n      categoriesList.push(...getChildrenCategories(category));\n    }\n    return categoriesList;\n  };\n\n  const findIsIndeterminate = (category: Category) => {\n    return (\n      category?.children?.some((child: Category) => {\n        return selectedCategories.includes(child.category_id);\n      }) &&\n      category?.children?.some((child: Category) => {\n        return !selectedCategories.includes(child.category_id);\n      })\n    );\n  };\n\n  const findIsChecked = (category: Category) => {\n    if (selectedCategories.includes(category.category_id)) {\n      return true;\n    }\n    if (category?.children?.length) {\n      return category?.children?.every((value: Category) => {\n        return selectedCategories.includes(value.category_id);\n      });\n    }\n    return false;\n  };\n\n  const onChange = (event: any): void => {\n    const id = parseInt(event?.target?.defaultValue);\n    if (!id) {\n      return;\n    }\n\n    const category = getCategoriesFlat().find((value: Category) => {\n      return value.category_id === id;\n    });\n\n    if (selectedCategories.includes(id)) {\n      if (category?.children) {\n        const childrenIds = getChildrenCategories(category).map(\n          (v) => v.category_id\n        );\n        setSelectedCategories(\n          selectedCategories.filter((value: number) => {\n            return !childrenIds.includes(value) && value !== id;\n          })\n        );\n      }\n      if (!category?.children) {\n        setSelectedCategories(\n          selectedCategories.filter((value: number) => {\n            return value !== id;\n          })\n        );\n      }\n    } else {\n      const childrenIds = getChildrenCategories(category).map(\n        (v) => v.category_id\n      );\n      childrenIds.length > 0\n        ? setSelectedCategories([...selectedCategories, ...childrenIds, id])\n        : setSelectedCategories([...selectedCategories, id]);\n    }\n  };\n\n  const handleSetChild = (category: Category) => {\n    if (showChildren.includes(category.category_id)) {\n      setShowChildren(\n        showChildren.filter((value: number) => {\n          return value !== category.category_id;\n        })\n      );\n    } else {\n      setShowChildren([...showChildren, category.category_id]);\n    }\n  };\n\n  useEffect(() => {\n    props.onChange(selectedCategories);\n  }, [selectedCategories]);\n\n  const renderCheckbox = (category: Category): JSX.Element => {\n    return (\n      <Checkbox\n        value={category.category_id}\n        key={category.category_id}\n        isIndeterminate={findIsIndeterminate(category)}\n        onChange={(e) => onChange(e)}\n        isChecked={findIsChecked(category)}\n      >\n        {/* {category.name} */}\n        {category.children ? (\n          category.children.map((cat) => renderCheckbox(cat))\n        ) : (\n          <></>\n        )}\n      </Checkbox>\n    );\n  };\n\n  const renderCheckboxGroup = (categoriesList: Category[]) => {\n    return categoriesList.map((v: Category, i) => {\n      return (\n        <Box key={v.category_id} w=\"100%\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            w=\"full\"\n            onClick={() => handleSetChild(v)}\n          >\n            {renderCheckbox(v)}\n            {v?.children?.length ? <ChevronDownIcon /> : <></>}\n          </Box>\n          {v.children?.length ? (\n            <Box\n              marginLeft=\"7px\"\n              hidden={showChildren.includes(v.category_id)}\n              display=\"flex\"\n              flexDirection=\"row\"\n            >\n              <Box borderRight=\"1px solid black\" w=\"0\" marginRight=\"10px\" />\n              <Box display=\"flex\" flexDirection=\"column\">\n                {renderCheckboxGroup(v.children)}\n              </Box>\n            </Box>\n          ) : (\n            <></>\n          )}\n        </Box>\n      );\n    });\n  };\n\n  console.log(parentCategories);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" w=\"100%\">\n      <Box textAlign=\"center\" w=\"100%\">\n        Categories\n      </Box>\n      {loading ? <></> : renderCheckboxGroup(parentCategories)}\n    </Box>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\RangeFilter\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\index.tsx",["855"],[],"import RangeFilter from \"./components/RangeFilter\";\nimport { Box, useMediaQuery } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport CheckboxFilter from \"./components/CheckboxFilter\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nimport CheckBox from \"./components/Checkbox\";\nimport { Category } from \"../../../api/entities\";\nimport CheckboxWhole from \"./components/Checkbox\";\nimport PriceFilter from \"./components/Price\";\nimport ReviewFilter from \"./components/ReviewFilter\";\nimport { ThemeContext } from \"../../contexts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux/store/store\";\nimport { getAllCategories, getMostPopularCategories } from \"../../../api/helpers/requests/categories\";\nimport { setCategories } from \"../../../redux/actions/settingsAction\";\nimport { CategoryResponse } from \"../../../api/services/ProductService\";\n\nexport default function Sidebar(): JSX.Element {\n  const [isLargerThan800] = useMediaQuery(\"(min-width: 800px)\");\n  const [price, setPrice] = useState<number[]>([0, 100]);\n  const { theme } = useContext(ThemeContext);\n\n  const categories = useSelector(\n    (state: RootState) => state.settingsReducer.categories\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getAllCategories().then((res: CategoryResponse[]) => {\n      dispatch(setCategories(res.map((v: CategoryResponse) => v.category)))\n    }\n    );\n  }, []);\n\n  return (\n    <Box\n      w={isLargerThan800 ? \"40vh\" : \"100%\"}\n      h=\"fit-content\"\n      margin=\"10px\"\n      padding=\"10px\"\n      display=\"flex\"\n      flexDirection={isLargerThan800 ? \"column\" : \"row\"}\n      gap=\"10px\"\n    >\n      <PriceFilter\n        min={0}\n        max={100}\n        step={1}\n        title={\"Price\"}\n        onChange={setPrice}\n      />\n      <CheckboxWhole categories={categories} />\n      <ReviewFilter />\n    </Box>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\types\\CheckboxFilterType\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\types\\RangeFilterType\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\AuthContext\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\FilterContext\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ModalContext\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ProductContext\\index.tsx",["856","857"],[],"import React, { useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport { Product, Review } from \"../../../api/entities\";\nimport { getReviewsByProductId } from \"../../../api/helpers/requests/review\";\nimport { getProductById } from \"../../../api/helpers/requests/product\";\nimport { AuthContext } from \"..\";\nimport { convertCurrency } from \"../../../api/helpers/requests/currency\";\n\nexport const ProductContext = React.createContext<{\n  product: Product;\n  reviews: Review[];\n  onUpdateReview: () => void;\n  convertedPrice: number;\n}>({\n  product: new Product(),\n  reviews: [new Review()],\n  onUpdateReview: null,\n  convertedPrice: null,\n});\n\nexport const ProductProvider = (props: {\n  children?: JSX.Element;\n}): JSX.Element => {\n  const { user } = useContext(AuthContext);\n  const { children } = props;\n  const router = useRouter();\n  const { id } = router.query;\n\n  const [product, setProduct] = useState<Product>({\n    product_id: 1,\n    seller: user,\n    title: \"\",\n    url: \"\",\n    description: \"\",\n    image_url: \"\",\n    image_alt: \"\",\n    price: 0,\n    currency: {\n      currency_id: 1,\n      code: \"GBP\",\n      symbol: \"$\",\n      gbp_exchange_rate: 1,\n    },\n    review_score: 0,\n    review_count: 0,\n  });\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [convertedPrice, setConvertedPrice] = useState<number>();\n\n  const idToNumber = (id: string[] | string): number => {\n    if (id instanceof Array) {\n      id = id[0];\n    }\n    const idNumber = parseInt(id);\n    return idNumber;\n  };\n\n  const getReviews = () => {\n    if (!id) {\n      return;\n    }\n    const idNumeric = idToNumber(id);\n    getReviewsByProductId(idNumeric).then((reviews: Review[]) => {\n      if (!reviews) {\n        return;\n      }\n      setReviews(reviews);\n    });\n  };\n\n  const getProduct = () => {\n    if (!id) {\n      return;\n    }\n    const idNumeric = idToNumber(id);\n    getProductById(idNumeric).then((product: Product) => {\n      if (!product) {\n        return;\n      }\n      setProduct(product);\n    });\n  };\n\n  const getConvertedPrice = () => {\n    if (!product || !user?.currency?.currency_id) {\n      return;\n    }\n    convertCurrency(product.currency, product.price, user.currency).then(\n      (res) => setConvertedPrice(res)\n    );\n  };\n\n  useEffect(() => {\n    getProduct();\n    getReviews();\n    getConvertedPrice();\n  }, [id]);\n\n  useEffect(() => {\n    getConvertedPrice();\n  }, [product]);\n\n  const onUpdateReview = () => {\n    getReviews();\n    getProduct();\n  };\n\n  return (\n    <ProductContext.Provider\n      value={{\n        product: product,\n        reviews: reviews,\n        onUpdateReview: onUpdateReview,\n        convertedPrice: convertedPrice,\n      }}\n    >\n      {children}\n    </ProductContext.Provider>\n  );\n};\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ProductListContext\\index.tsx",["858"],[],"import { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getAllProducts,\n  getProductBySearch,\n} from \"../../../api/helpers/requests/product\";\nimport { CurrencyCode } from \"../../../types\";\nimport { Category, Product } from \"../../../api/entities\";\n\nexport const ProductListContext = React.createContext<{\n  productList: Product[];\n  search: (query: string, categories: Category[]) => void;\n  reload: () => void;\n}>({\n  productList: [],\n  search: null,\n  reload: null,\n});\n\nexport const ProductListProvider = (props: {\n  children?: JSX.Element;\n}): JSX.Element => {\n  const { children } = props;\n\n  const router = useRouter();\n  const { query, categories } = router.query;\n\n  const [productList, setProductList] = useState<Product[]>([]);\n\n  const getProducts = () => {\n    getAllProducts().then((products: Product[]) => {\n      if (!products) {\n        return;\n      }\n      setProductList(products);\n    });\n  };\n\n  const search = (query: string, categories: Category[]) => {\n    getProductBySearch(query, categories).then((res) => {\n      setProductList(res);\n    });\n  };\n\n  const getSearch = () => {\n    if (query || categories) {\n      search(query, categories);\n    }\n    if (!query && !categories) {\n      getProducts();\n    }\n  };\n\n  useEffect(() => {\n    getSearch();\n  }, [query, categories]);\n\n  return (\n    <ProductListContext.Provider\n      value={{\n        productList: productList,\n        search: search,\n        reload: getSearch,\n      }}\n    >\n      {children}\n    </ProductListContext.Provider>\n  );\n};\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\SettingsContext\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\ThemeContext\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\UserContext\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ImageInputBox\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\InputBox\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\data-source.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\review\\add\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ProductForm\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ProductForm\\Validation\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\RatingInputBox\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ReviewForm\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\ReviewForm\\Validation\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\product\\[id].tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\ProductInfo\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Order.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\OrderItem.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\sanitation\\id\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\queryTransformer.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\enums\\StatusCode\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Modal\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Order\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\types\\Service\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\OrdersButton\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Basket.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\BasketItem.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\routes\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\BaseService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\BasketService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CurrencyService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\OrderService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\RepositoryService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\UserService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\OrderRequest.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\ProductRequest.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\UserRequest.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\CurrencyRequest.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\idFromUrl.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\products.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\ReviewRequest.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\ReviewService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\Router.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\api\\[...route].ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\utils\\formatting.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\CurrencyInputBox\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\currency.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\product.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\review.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\user.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\product\\add.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\AddressService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\form\\CategoryInputBox\\index.tsx",["859"],[],"import { Box, FormLabel, Checkbox } from \"@chakra-ui/react\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { SettingsContext } from \"../../../contexts/SettingsContext\";\nimport { Category } from \"../../../../api/entities\";\n\nexport interface ICategoryInputBox {\n  categories?: string[];\n  onChange: (categories: string[]) => void;\n}\n\nexport default function CategoryInputBox(\n  props: ICategoryInputBox\n): JSX.Element {\n  const { onChange } = props;\n  const { parentCategories, loading } = useContext(SettingsContext);\n  const [checkedCategories, setCheckedCategories] = useState<string[]>([]);\n\n  const updateCategories = (isChecked: boolean, value: string) => {\n    if (!isChecked) {\n      setCheckedCategories([...checkedCategories, value]);\n    }\n    if (isChecked) {\n      setCheckedCategories(checkedCategories.filter((v) => v !== value));\n    }\n  };\n\n  useEffect(() => {\n    onChange(checkedCategories);\n  }, [checkedCategories]);\n\n  const renderCategories = (categories: Category[]): JSX.Element[] => {\n    return categories.map((category: Category, index) => {\n      return (\n        <div key={index}>\n          <Checkbox\n            isChecked={checkedCategories.includes(category.name)}\n            key={index}\n            value={category.name}\n            onChange={() =>\n              updateCategories(\n                checkedCategories.includes(category.name),\n                category.name\n              )\n            }\n          >\n            {category.name}\n          </Checkbox>\n          {category.children ? renderCategories(category.children) : <></>}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <FormLabel w=\"20%\">Categories</FormLabel>\n      <Box display=\"flex\" flexDirection=\"column\">\n        {loading ? <></> : renderCategories(parentCategories)}\n      </Box>\n    </Box>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\page-components\\UserPage.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\Category.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\ProductCategory.ts",["860"],[],"// import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from \"typeorm\";\n// import { Product } from \".\";\n\n// @Entity()\n// export class ProductCategory {\n//   @PrimaryGeneratedColumn()\n//   product_category_id: number;\n\n//   @ManyToOne((type) => Product, { eager: true, onDelete: \"SET NULL\" })\n//   product: Product;\n\n//   @Column()\n//   name: string;\n// }\nexport default {};\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\ProductType.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\init\\setCategories.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\categories.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\countries.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\order.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\CategoryRequest.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\request\\CountryRequest.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CountryService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\OrderItemService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\basket\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\BasketView.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\entities\\OrderView.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\helpers\\requests\\basket.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\BasketItemService.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\basket\\checkout\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\basket\\CheckoutPage\\index.tsx",["861","862"],[],"import { useContext, useState } from \"react\";\nimport { ThemeContext, UserContext } from \"../../../contexts\";\nimport { Box, Select, Button, Text } from \"@chakra-ui/react\";\nimport Navigation from \"../../navigation\";\nimport { Address } from \"../../../../data-source\";\nimport { BasketItem, Order, OrderItem } from \"../../../../api/entities\";\nimport { postOrder } from \"../../../../api/helpers/requests/order\";\nimport { emptyBasket } from \"../../../../api/helpers/requests/basket\";\nimport { useRouter } from \"next/router\";\n\ninterface DeliveryOptionType {\n  id: number;\n  name: string;\n  speed: string;\n  price: number;\n}\n\nexport default function CheckoutPage() {\n  const { basket, user, currentAddress } = useContext(UserContext);\n\n  const [deliveryMethod, setDeliveryMethod] = useState<number>(1);\n  const router = useRouter();\n\n  const deliveryOptions: DeliveryOptionType[] = [\n    {\n      id: 1,\n      name: \"Standard\",\n      speed: \"3-5 business days\",\n      price: 3.5,\n    },\n    {\n      id: 2,\n      name: \"Premium\",\n      speed: \"next day\",\n      price: 6,\n    },\n  ];\n\n  const getDeliveryOption = (id: number): DeliveryOptionType => {\n    return deliveryOptions.filter((value) => value.id === id)[0];\n  };\n\n  const renderAddress = (address: Address) => {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box>{address.name}</Box>\n        <Box>{`${address.number} ${address.street_name}`}</Box>\n        <Box>{`${address.county}`}</Box>\n        <Box>{`${address.postcode}`}</Box>\n      </Box>\n    );\n  };\n\n  const renderRow = (headings: any[]) => {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-evenly\"\n        w=\"100%\"\n      >\n        {headings.map((value) => {\n          return (\n            <Box w=\"25%\" textAlign=\"center\" border=\"1px solid gray\">\n              {value}\n            </Box>\n          );\n        })}\n      </Box>\n    );\n  };\n\n  const renderBasketProducts = (basket: BasketItem[]): JSX.Element => {\n    const deliveryOption = getDeliveryOption(deliveryMethod);\n\n    return (\n      <Box>\n        {basket.map((item) => {\n          const headings = [\n            item.product.title,\n            item.quantity,\n            item.product.price,\n            item.product.price * item.quantity,\n          ];\n          return renderRow(headings);\n        })}\n        {deliveryOption &&\n          renderRow([\n            deliveryOption.name,\n            1,\n            deliveryOption.price,\n            deliveryOption.price,\n          ])}\n      </Box>\n    );\n  };\n\n  const getBasketTotal = (): number => {\n    const itemsTotal = basket.reduce(\n      (partial, item) => partial + item.quantity * item.product.price,\n      0\n    );\n    return (\n      deliveryMethod && itemsTotal + getDeliveryOption(deliveryMethod).price\n    );\n  };\n\n  const handleChange = (option) => {\n    setDeliveryMethod(parseInt(option.target.value));\n  };\n\n  const renderSelectDelivery = (): JSX.Element => {\n    return (\n      <Select fontWeight=\"350\" onChange={(option) => handleChange(option)}>\n        {deliveryOptions.map((option) => {\n          return (\n            <option value={option.id}>\n              {option.name} ({option.speed}): £{option.price}\n            </option>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  const handleBuy = () => {\n    const order = new Order();\n    order.user = user;\n    order.address = currentAddress;\n    order.currency = user.currency;\n    order.date = new Date();\n    const orderItems = basket.map((item) => {\n      const orderItem = new OrderItem();\n      orderItem.order = order;\n      orderItem.price = item.product.price;\n      orderItem.product = item.product;\n      orderItem.quantity = item.quantity;\n      return orderItem;\n    });\n    postOrder(order, orderItems).then((res) => {\n      emptyBasket(user.user_id).then((res) => console.log(res));\n      router.replace(`http://localhost:3000/user/${user.user_id}/orders`);\n    });\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" w=\"100%\" margin=\"3px\">\n      <Box display=\"flex\" flexDirection=\"column\" w=\"85vh\">\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          w=\"100%\"\n          border=\"2px solid teal\"\n          borderBottom=\"none\"\n          padding=\"5px\"\n        >\n          <Text fontWeight=\"500\">Delivery Address</Text>\n          <Box fontWeight=\"350\" lineHeight=\"20px\">\n            {currentAddress ? renderAddress(currentAddress) : \"\"}\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          w=\"100%\"\n          border=\"2px solid teal\"\n          borderBottom=\"none\"\n          padding=\"5px\"\n        >\n          <Text fontWeight=\"500\">Select Delivery</Text>\n          {renderSelectDelivery()}\n        </Box>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          w=\"100%\"\n          border=\"2px solid teal\"\n          padding=\"5px\"\n        >\n          <Text fontWeight=\"500\">Order Summary</Text>\n          <Box fontWeight=\"500\">\n            {renderRow([\"Name\", \"Quantity\", \"Price\", \"Total\"])}\n          </Box>\n          {renderBasketProducts(basket)}\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            border=\"2px solid black\"\n          >\n            <Box w=\"25%\" textAlign=\"center\">\n              Total\n            </Box>\n            <Box w=\"25%\" textAlign=\"center\">\n              {getBasketTotal()}\n            </Box>\n          </Box>\n        </Box>\n        <Button onClick={() => handleBuy()}>Buy Now</Button>\n      </Box>\n    </Box>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\pages\\user\\[id]\\orders\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\orders\\OrdersPage\\index.tsx",["863","864","865"],[],"import { Box, Text } from \"@chakra-ui/react\";\nimport { UserContext } from \"../../../contexts\";\nimport { useContext } from \"react\";\nimport { Order, OrderItem } from \"../../../../api/entities\";\nimport ProductCardWide from \"../../product/ProductCard/ProductCardWide\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../redux/store/store\";\n\nexport default function OrdersPage(): JSX.Element {\n  const { orders } = useContext(UserContext);\n\n  const renderOrder = (\n    orderView: { order: Order; orderItems: OrderItem[] },\n    key: number\n  ) => {\n    const { order, orderItems } = orderView;\n    const conversionMultiple = useSelector(\n      (state: RootState) => state.userReducer.conversionMultiple\n    );\n    const userCurrencySymbol = useSelector(\n      (state: RootState) => state.userReducer.userCurrencySymbol\n    );\n\n    const orderTotal = orderItems\n      .map((item: OrderItem) => item.price * item.quantity * conversionMultiple)\n      .reduce((acc, curr) => acc + curr, 0);\n\n    const date = new Date(order.date);\n\n    return (\n      <Box\n        key={key}\n        display=\"flex\"\n        flexDirection=\"column\"\n        padding=\"5px\"\n        w=\"100vh\"\n        marginTop=\"1vh\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          bgColor=\"gray.200\"\n          gap=\"10%\"\n          padding=\"10px\"\n          borderTopRadius=\"10px\"\n          borderColor=\"black\"\n          borderWidth=\"1px\"\n          borderBottom=\"none\"\n          fontWeight={400}\n        >\n          <Box display=\"flex\" flexDirection=\"column\">\n            <Text fontSize=\"xs\">ORDER PLACED</Text>\n            <Text fontSize=\"s\">\n              {date.toLocaleDateString(\"en-US\", {\n                day: \"numeric\",\n                month: \"long\",\n                year: \"numeric\",\n              })}\n            </Text>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"column\">\n            <Text fontSize=\"xs\">TOTAL</Text>\n            <Text>\n              {userCurrencySymbol}\n              {orderTotal}\n            </Text>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"column\">\n            <Text fontSize=\"xs\">Delivery to:</Text>\n            <Text>\n              {order.address.name}, {order.address.number}{\" \"}\n              {order.address.street_name}\n            </Text>\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          borderBottomRadius=\"10px\"\n          borderColor=\"black\"\n          borderWidth=\"1px\"\n          padding=\"10px\"\n          overflow=\"hidden\"\n        >\n          {orderItems.map((item) => {\n            return <ProductCardWide {...item.product} />;\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <>\n      <Box marginX=\"10vh\" marginY=\"5vh\">\n        {orders?.length &&\n          orders.map((order, index) => {\n            return renderOrder(order, index);\n          })}\n      </Box>\n    </>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\AddProductButton\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LocationButton\\modals\\ChangeCountryModal.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\LocationButton\\modals\\ChangeCurrencyModal.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\actions\\productActions.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\actions\\settingsAction.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\actions\\userActions.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\product.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\settings.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\reducers\\user.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\redux\\store\\store.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\navigation\\NavigationButton\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\Checkbox\\index.tsx",["866"],[],"import { CheckBoxType } from \"../../types/CheckBoxType\";\nimport { Box, Checkbox, Button, useMediaQuery } from \"@chakra-ui/react\";\nimport { Category } from \"../../../../../api/entities\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@chakra-ui/icons\";\nimport { PageContext } from \"../../../../contexts/PageContext\";\nimport { useDispatch } from \"react-redux\";\nimport { setCategories } from \"../../../../../redux/actions/settingsAction\";\nimport { setQueryParams } from \"../../../../../redux/actions/productActions\";\n\nfunction CheckBox(props: CheckBoxType): JSX.Element {\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" key={props.key}>\n      <Checkbox\n        value={props.key}\n        key={props.key}\n        onChange={props.onChange}\n        isChecked={props.isChecked}\n        marginLeft=\"3px\"\n      >\n        {props.name}\n      </Checkbox>\n    </Box>\n  );\n}\n\nexport default function CheckboxWhole(props: {\n  categories: Category[];\n}): JSX.Element {\n  const defaultSelectedCategories = props.categories.map(\n    (category: Category) => category.category_id\n  );\n\n  const [selectedCategories, setSelectedCategories] = useState<number[]>(\n    defaultSelectedCategories\n  );\n  const [display, setDisplay] = useState(false);\n\n  const dispatch = useDispatch();\n\n  // on change whether window is larger than 800px, close the filter\n  const [isLargerThan800] = useMediaQuery(\"(min-width: 800px)\");\n  useEffect(() => {\n    setDisplay(false);\n  }, [isLargerThan800]);\n\n  useEffect(() => {\n    dispatch(setQueryParams({ categories: selectedCategories }));\n  }, [selectedCategories]);\n\n  const onClick = () => {\n    setDisplay(!display);\n  };\n\n  const clearAll = () => {\n    setSelectedCategories([]);\n  };\n\n  const onChange = (event: any): void => {\n    const id = parseInt(event?.target?.defaultValue);\n    if (!id) {\n      return;\n    }\n\n    // if already selected\n    if (selectedCategories.includes(id)) {\n      setSelectedCategories(\n        selectedCategories.filter((value: number) => {\n          return value !== id;\n        })\n      );\n    } else {\n      setSelectedCategories([...selectedCategories, id]);\n    }\n  };\n\n  const isChecked = (id: number) => {\n    return selectedCategories.includes(id);\n  };\n\n  function renderCategories(categories: Category[], indentation: number) {\n    var out = [];\n    for (let category of categories) {\n      out.push(\n        CheckBox({\n          name: category.name,\n          key: category.category_id,\n          onChange: onChange,\n          isChecked: isChecked(category.category_id),\n        })\n      );\n    }\n    return out;\n  }\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" w=\"100%\" flexGrow={1}>\n      <Button textAlign=\"center\" onClick={onClick}>\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"end\">\n          Categories\n          {display ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </Box>\n      </Button>\n      <Box display={display ? \"flex\" : \"none\"} flexDirection=\"column\">\n        {renderCategories(props.categories, 0)}\n      </Box>\n      <Box display={display ? \"\" : \"none\"} as=\"button\" onClick={clearAll}>\n        Clear All\n      </Box>\n    </Box>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\Price\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\components\\ReviewFilter\\index.tsx",["867"],[],"import { Box, Button, useMediaQuery } from \"@chakra-ui/react\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@chakra-ui/icons\";\nimport ReviewStars from \"../../../product/ProductCard/components/ReviewStars\";\nimport { PageContext } from \"../../../../contexts/PageContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setQueryParams } from \"../../../../../redux/actions/productActions\";\nimport { RootState } from \"../../../../../redux/store/store\";\n\nexport default function ReviewFilter(): JSX.Element {\n  const [display, setDisplay] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n  const reviewMin = useSelector(\n    (state: RootState) => state.productReducer.queryParams.reviewMin\n  );\n\n  // on change whether window is larger than 800px, close the filter\n  const [isLargerThan800] = useMediaQuery(\"(min-width: 800px)\");\n  useEffect(() => {\n    setDisplay(false);\n  }, [isLargerThan800]);\n\n  const onClick = () => {\n    setDisplay(!display);\n  };\n\n  const onClickReview = (reviewMin) => {\n    dispatch(setQueryParams({ reviewMin: reviewMin }));\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" w=\"100%\" gap=\"5px\" flexGrow={1}>\n      <Button w=\"100%\" textAlign=\"center\" onClick={onClick}>\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"end\">\n          Review Score\n          {display ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </Box>\n      </Button>\n      <Box display={display ? \"flex\" : \"none\"} flexDirection=\"column\" gap=\"5px\">\n        {[5, 4, 3, 2, 1, 0].map((value) => (\n          <Box\n            as=\"button\"\n            onClick={() => onClickReview(value)}\n            display=\"flex\"\n            flexDirection=\"row\"\n            gap=\"3px\"\n            alignItems=\"center\"\n            justifyContent=\"left\"\n            textDecoration={value == reviewMin ? \"underline\" : \"\"}\n          >\n            <ReviewStars reviewScore={value} />\n            <span>and up</span>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n","C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\sidebar\\types\\CheckBoxType\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\components\\utils\\loading\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\views\\contexts\\PageContext\\index.tsx",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\ProductService\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\ProductService\\test.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CategoryService\\index.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\api\\services\\CategoryService\\test.ts",[],[],"C:\\Users\\joshu\\OneDrive\\Documents\\Programming\\TypeScript\\Amazon-Clone\\src\\test\\testDataset.seed.ts",["868"],[],{"ruleId":"869","severity":1,"message":"870","line":50,"column":6,"nodeType":"871","endLine":50,"endColumn":8,"suggestions":"872"},{"ruleId":"873","severity":1,"message":"874","line":37,"column":15,"nodeType":"875","endLine":42,"endColumn":17},{"ruleId":"869","severity":1,"message":"876","line":22,"column":6,"nodeType":"871","endLine":22,"endColumn":8,"suggestions":"877"},{"ruleId":"873","severity":1,"message":"874","line":44,"column":15,"nodeType":"875","endLine":52,"endColumn":17},{"ruleId":"873","severity":1,"message":"874","line":58,"column":9,"nodeType":"875","endLine":66,"endColumn":11},{"ruleId":"878","severity":2,"message":"879","line":88,"column":13,"nodeType":"880","messageId":"881","endLine":88,"endColumn":31},{"ruleId":"869","severity":1,"message":"882","line":64,"column":6,"nodeType":"871","endLine":64,"endColumn":8,"suggestions":"883"},{"ruleId":"869","severity":1,"message":"882","line":69,"column":6,"nodeType":"871","endLine":69,"endColumn":42,"suggestions":"884"},{"ruleId":"869","severity":1,"message":"885","line":74,"column":6,"nodeType":"871","endLine":74,"endColumn":17,"suggestions":"886"},{"ruleId":"869","severity":1,"message":"887","line":82,"column":6,"nodeType":"871","endLine":90,"endColumn":4,"suggestions":"888"},{"ruleId":"878","severity":2,"message":"879","line":176,"column":13,"nodeType":"880","messageId":"881","endLine":178,"endColumn":24},{"ruleId":"873","severity":1,"message":"874","line":84,"column":11,"nodeType":"875","endLine":92,"endColumn":13},{"ruleId":"869","severity":1,"message":"889","line":109,"column":6,"nodeType":"871","endLine":109,"endColumn":26,"suggestions":"890"},{"ruleId":"869","severity":1,"message":"891","line":33,"column":6,"nodeType":"871","endLine":33,"endColumn":8,"suggestions":"892"},{"ruleId":"869","severity":1,"message":"893","line":98,"column":6,"nodeType":"871","endLine":98,"endColumn":10,"suggestions":"894"},{"ruleId":"869","severity":1,"message":"895","line":102,"column":6,"nodeType":"871","endLine":102,"endColumn":15,"suggestions":"896"},{"ruleId":"869","severity":1,"message":"897","line":56,"column":6,"nodeType":"871","endLine":56,"endColumn":25,"suggestions":"898"},{"ruleId":"869","severity":1,"message":"899","line":29,"column":6,"nodeType":"871","endLine":29,"endColumn":25,"suggestions":"900"},{"ruleId":"901","severity":1,"message":"902","line":15,"column":1,"nodeType":"903","endLine":15,"endColumn":19},{"ruleId":"878","severity":2,"message":"879","line":64,"column":13,"nodeType":"880","messageId":"881","endLine":66,"endColumn":19},{"ruleId":"878","severity":2,"message":"879","line":117,"column":13,"nodeType":"880","messageId":"881","endLine":119,"endColumn":22},{"ruleId":"904","severity":2,"message":"905","line":17,"column":32,"nodeType":"906","endLine":17,"endColumn":43},{"ruleId":"904","severity":2,"message":"905","line":20,"column":32,"nodeType":"906","endLine":20,"endColumn":43},{"ruleId":"878","severity":2,"message":"879","line":87,"column":20,"nodeType":"880","messageId":"881","endLine":87,"endColumn":57},{"ruleId":"869","severity":1,"message":"891","line":49,"column":6,"nodeType":"871","endLine":49,"endColumn":26,"suggestions":"907"},{"ruleId":"878","severity":2,"message":"879","line":42,"column":11,"nodeType":"880","messageId":"881","endLine":54,"endColumn":17},{"ruleId":null,"fatal":true,"severity":2,"message":"908","line":3,"column":0},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addresses'. Either include it or remove the dependency array.","ArrayExpression",["909"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getConvertedPrice', 'product.currency', 'product.price', and 'user.currency'. Either include them or remove the dependency array.",["910"],"react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement","missingIterKey","React Hook useEffect has missing dependencies: 'fetchProducts' and 'queryParams'. Either include them or remove the dependency array.",["911"],["912"],"React Hook useEffect has missing dependencies: 'dispatch', 'incrementPage', and 'pageNumber'. Either include them or remove the dependency array.",["913"],"React Hook useEffect has missing dependencies: 'fetchProducts', 'incrementPage', 'pageNumber', and 'queryParams'. Either include them or remove the dependency array.",["914"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["915"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["916"],"React Hook useEffect has missing dependencies: 'getConvertedPrice', 'getProduct', and 'getReviews'. Either include them or remove the dependency array.",["917"],"React Hook useEffect has a missing dependency: 'getConvertedPrice'. Either include it or remove the dependency array.",["918"],"React Hook useEffect has a missing dependency: 'getSearch'. Either include it or remove the dependency array.",["919"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["920"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/rules-of-hooks","React Hook \"useSelector\" is called in function \"renderOrder\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier",["921"],"Parsing error: Expression expected.",{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"930","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"944","fix":"945"},{"desc":"946","fix":"947"},"Update the dependencies array to be: [addresses]",{"range":"948","text":"949"},"Update the dependencies array to be: [getConvertedPrice, product.currency, product.price, user.currency]",{"range":"950","text":"951"},"Update the dependencies array to be: [fetchProducts, queryParams]",{"range":"952","text":"953"},"Update the dependencies array to be: [queryParams.start, queryParams.end, fetchProducts, queryParams]",{"range":"954","text":"955"},"Update the dependencies array to be: [dispatch, increment, incrementPage, pageNumber]",{"range":"956","text":"957"},"Update the dependencies array to be: [queryParams.categories, queryParams.query, queryParams.priceMax, queryParams.priceMin, queryParams.reviewMin, queryParams.filterType, queryParams, incrementPage, pageNumber, fetchProducts]",{"range":"958","text":"959"},"Update the dependencies array to be: [props, selectedCategories]",{"range":"960","text":"961"},"Update the dependencies array to be: [dispatch]",{"range":"962","text":"963"},"Update the dependencies array to be: [getConvertedPrice, getProduct, getReviews, id]",{"range":"964","text":"965"},"Update the dependencies array to be: [getConvertedPrice, product]",{"range":"966","text":"967"},"Update the dependencies array to be: [query, categories, getSearch]",{"range":"968","text":"969"},"Update the dependencies array to be: [checkedCategories, onChange]",{"range":"970","text":"971"},"Update the dependencies array to be: [dispatch, selectedCategories]",{"range":"972","text":"973"},[1089,1091],"[addresses]",[951,953],"[getConvertedPrice, product.currency, product.price, user.currency]",[2239,2241],"[fetchProducts, queryParams]",[2341,2377],"[queryParams.start, queryParams.end, fetchProducts, queryParams]",[2508,2519],"[dispatch, increment, incrementPage, pageNumber]",[2716,2905],"[queryParams.categories, queryParams.query, queryParams.priceMax, queryParams.priceMin, queryParams.reviewMin, queryParams.filterType, queryParams, incrementPage, pageNumber, fetchProducts]",[3537,3557],"[props, selectedCategories]",[1467,1469],"[dispatch]",[2399,2403],"[getConvertedPrice, getProduct, getReviews, id]",[2457,2466],"[getConvertedPrice, product]",[1330,1349],"[query, categories, getSearch]",[932,951],"[checkedCategories, onChange]",[1618,1638],"[dispatch, selectedCategories]"]